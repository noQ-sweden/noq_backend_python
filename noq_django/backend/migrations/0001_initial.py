# Generated by Django 5.1.3 on 2025-05-07 09:24

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='ClientRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('open', 'Open'), ('paid', 'Paid'), ('void', 'Void'), ('uncollectible', 'Uncollectible')], default='open', max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
            ],
            options={
                'db_table': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('target_group', models.CharField(blank=True, max_length=100)),
                ('other', models.TextField(blank=True)),
                ('applies_to', models.JSONField(blank=True, default=list)),
            ],
        ),
        migrations.CreateModel(
            name='SleepingSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bed_type', models.CharField(choices=[('Dubbelsäng över', 'Dubbelsäng över'), ('Dubbelsäng under', 'Dubbelsäng under'), ('Singelsäng', 'Singelsäng'), ('Madrass', 'Madrass')], max_length=25)),
                ('status', models.CharField(choices=[('Ledig', 'Ledig'), ('Upptagen', 'Upptagen'), ('Avstängd', 'Avstängd')], default='Ledig', max_length=10)),
            ],
            options={
                'db_table': 'sleeping_spaces',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(max_length=32)),
                ('gender', models.CharField(blank=True, default=None, max_length=1)),
                ('street', models.CharField(default='', max_length=80)),
                ('postcode', models.CharField(default='', max_length=5)),
                ('city', models.CharField(default='', max_length=80)),
                ('country', models.CharField(default='', max_length=25)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=40)),
                ('unokod', models.CharField(max_length=10)),
                ('day_of_birth', models.DateField(default=None, null=True)),
                ('personnr_lastnr', models.CharField(default='', max_length=4)),
                ('last_edit', models.DateField(verbose_name='Senaste Aktivitet')),
                ('flag', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('requirements', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.clientrequirement')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.region')),
            ],
            options={
                'verbose_name_plural': 'client',
                'db_table': 'client',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('street', models.CharField(max_length=80)),
                ('postcode', models.CharField(default='', max_length=5)),
                ('city', models.CharField(default='', max_length=80)),
                ('blocked_clients', models.ManyToManyField(blank=True, to='backend.client')),
                ('caseworkers', models.ManyToManyField(related_name='caseworker_hosts', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.region')),
            ],
            options={
                'db_table': 'hosts',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('currency', models.CharField(default='SEK', max_length=3)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('vat', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('vat_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('sale_date', models.DateField(blank=True, null=True)),
                ('seller_vat_number', models.CharField(blank=True, max_length=50, null=True)),
                ('buyer_vat_number', models.CharField(blank=True, max_length=50, null=True)),
                ('buyer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('buyer_address', models.TextField(blank=True, null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='backend.host')),
                ('status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, to='backend.invoicestatus')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('total_places', models.IntegerField()),
                ('type', models.CharField(choices=[('room', 'Room'), ('woman-only', 'Woman Only'), ('washingmachine', 'Washing Machine'), ('hygieneproducts', 'Hygiene Products'), ('breakfast', 'Breakfast'), ('dinner', 'Dinner'), ('storage', 'Storage')], max_length=16)),
                ('room_location', models.CharField(choices=[('Sovsal', 'Sovsal'), ('Dubbelrum', 'Dubbelrum'), ('Eget rum', 'Eget rum')], max_length=20)),
                ('bookable', models.BooleanField(default=True)),
                ('host', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='backend.host')),
                ('requirements', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='backend.productrequirement')),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Bokningstid')),
                ('start_date', models.DateField(verbose_name='Startdatum')),
                ('end_date', models.DateField(null=True, verbose_name='Slutdatum')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.bookingstatus', verbose_name='Bokningsstatus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.client', verbose_name='Namn')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product', verbose_name='Plats')),
            ],
            options={
                'db_table': 'product_booking',
            },
        ),
        migrations.CreateModel(
            name='Available',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_date', models.DateField(verbose_name='Datum')),
                ('places_left', models.IntegerField(default=0, verbose_name='Platser kvar')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.product', verbose_name='Bokning')),
            ],
            options={
                'db_table': 'product_available',
            },
        ),
        migrations.AddField(
            model_name='productrequirement',
            name='requirements',
            field=models.ManyToManyField(to='backend.requirement'),
        ),
        migrations.AddField(
            model_name='clientrequirement',
            name='requirements',
            field=models.ManyToManyField(to='backend.requirement'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uno', models.CharField(max_length=30, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('birth_year', models.PositiveIntegerField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('language', models.CharField(choices=[('sv', 'Swedish'), ('en', 'English'), ('ro', 'Romanian'), ('pl', 'Polish')], default='sv', max_length=2)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('presentation', models.TextField(blank=True)),
                ('supporting_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supported_user', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.CharField(max_length=50)),
                ('skills', models.TextField(blank=True)),
                ('preferred_regions', models.ManyToManyField(to='backend.region')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VolunteerHostAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('start_date', models.DateField(verbose_name='Startdatum')),
                ('end_date', models.DateField(null=True, verbose_name='Slutdatum')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.host')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='host_assignments', to='backend.volunteerprofile')),
            ],
        ),
    ]
